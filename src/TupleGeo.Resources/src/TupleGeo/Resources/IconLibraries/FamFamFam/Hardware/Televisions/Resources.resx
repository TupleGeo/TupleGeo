<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Television" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAttJREFUOE9tkltI
        k2EcxhVkdLf7LisidObwgMhMUQQhZDiIgcqsOefWNnPs4DbZQUOXEzMNpZJQzJJI8rA8UmRYlJmWWFlR
        3Ti6iF21fTu0ffj0vh9tH0YvPLzwh+f3P2YCyGjsmBLknjz6PSsr88i7vR8n7njrf2X851XL3cJTomPf
        wuFofG936/jG6lgigwKoFI57gr7xtcDA5LNgnXVCmIqn/kqZTah1jgYVpsFAQWW9IBVPA2igwT4p6Bld
        CfTcWg5Km66mIeVSo1BlGwnWGfoD4nJ52kw9hwA0UNs8JLD1Pdi39E4FK2otQslZnVBpGQrKtb37p8+c
        O2ROA6xWaxcRa7FYOJnNZtbn84HK6/Wiu7sbra2trMFgYPV6PavValmFQtGVBhDTwc2tJP7VjTdJDG8m
        cX0jgctrMWjmQ2icCUFBVFNTc5AGuN1uzHxiMbrNQ1LmwVcJ2FcjUM+FoJoNQzkbwnkCqK6uJv6/M3C5
        XFj6ysL/hcXtt0mkzP0v4jAvM9A/CkM7H0YLkYoAlARUVVXFA+x2O+Y/s5we7rFcK9RsW2FgWmRwaYFC
        GAJhSCUEMhNGRUUFDzCZTJgmxumPLO5/YDG2nYDrSYQAIjAvMTASiIEALvrD0FAAqaCsrIwHtLW1Yeo9
        i7u7LCZ2EhjaiOPKeoz0HoWVQIyLERhIFTo/g5Y5hgAYSCQSHkBWg/GdJMZI/yObvzHwMg7f8zipIgrL
        chTGpQhaFyKkAjrMCJpmIygpKeEBarUaw68TuEYm7l2Pk5XF4XkaQ8fjGMwrBLAYJTOIQuuPonkuigsE
        UFxczAPIgXDHolKp8LO0FA0NDZDL5ejs7IRUKuV+ujb60+HRhIWFhTxAo9HA4/HA6XTC4XCgvb0d5Bph
        NBrpBUKn04FcH2ekSZRKJQoKCniATCbjhkL7oqUVFRVxGfLz8yEWi5GXl4fc3FyIRCLk5ORwys7O5gB/
        AFcjm0bwZcRWAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="TelevisionAdd" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAvlJREFUOE9tk1tI
        k2EcxhVkdLfrvAiyCC8yp3lAZpgmSGJLKRYqM3XODbfp2MFttk0NnYfmEe0gonhIKkmbmYcpGRZlpiVq
        VlQ3SkHsqm1ua/vw6f2+2sTohYeX7w/P7/2fvlAAIQVVI6yoE+Ffw8JCD73b+nZ80Jz3M+Q/J4NvYkee
        jPjidLq9W+srx5Zm+3whNICWQH+X1dy/sNM69MyeqxlgB+KBOy1Hy5YYeuwCZfvO6bQ8ViAeBNCBfN0Q
        q75nZqf+zrSdV9wShKTwFGyhttueK7PscFL4QTPtOQCgA9klHSxt84NtdeOIPTVbzeZmlrGL1B12vqRx
        +9SZywfMQYBGo6klotRqNSOVSkU1NTWBltlsRl1dHeRyOSWTySipVEpJJBJKIBDUBgHEtHd7xY9/deuN
        H13LfnQu+XB9wQOx1YGCMQcERFlZWXtBgMlkwtgHCj2r+5CAuf2VD7rZXYgeOSAcd6Jo3IGrBJCRkUH8
        f3tgNBox9ZnCxCcKvW/9CJgtL7xQTbsgfeyExOpEKZGQAIoIKD09fR+g0+lg/UgxerhFMaXQZu2MC8on
        LpRP0hAXgbhIJgQy5kRqauo+QKlUYpQYR99TuLdJoW/VB+P8LgHsQjXlgoJA5MP3UX6zEKWtF5FnPo9z
        eQn7gIqKCoxsUBhepzCw5kPHkhcNix5SuxsaApENDqF2tAiTm91Y+25D21wZrrRFIVF62MLsARkN+tf8
        6CP1dy//QutLL5qee0kWbqin3ShozIR1ox3WrU76VVjmRWibF9MADwMQiUToeu1DG+m4edFLRuZF9VMP
        quY8UM24kXUtBlObvYw5cCbWu2nAn/+ALAizLEKhED+Sk5Gfnw8+n4+amhrweDxw5Udww1aMBlsh42+Y
        LTyYgVgsRnV1NQwGA/R6PSorK0G2EQqFgt5AZEvP4pIlEi22EtAv0zf9HexBTk4OuFwukpKSkJiYiPj4
        eMTFxSE2NhYcDgfR0dGI5UUgQRLOpE3fMReOMlP4DTG2m8lzGylGAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="TelevisionDelete" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAwtJREFUOE9tkm1I
        k1EYhhXn8t/wV9GPQC0pyBRTRDRsSxFKh6MYqMyyaQ7ddOzDbaJOQ5cTv1EsKcUssyTNTJ0pGRb5kaZY
        WVEGaQU1KHJzW9vL7s770iZGB24OPHBdPM85jy8An6ySXnZY6N41Fss3YGn1y/7rhoxfPv85ycJyzsHD
        wR8sFptjdWUhZHa80+lDC+iIdDfZtV1TGw09j83p6m6Op+65eQINR1LaYRYpmjaO8jLYnrpXQBcytT3s
        6g7TRvWVMTP/fL1XksCXc8SaNnO6tG4jIkHohWlmh4AupOU0szW1d9ZVNb1mbpqKE3cyn5OtajYLJTXr
        R46d2QF7BWq1upKEUqlUTJRKJWU0GkHHYDCgqqoKMpmMkkqlVEFBASWRSCiRSFTpFRDIfXnBhX/T/tyF
        1nkXWmaduDhlR97QJrIGNiEiSUlJcXsF5eXlGHhDoWNxW+KBm2ac0I5vIffeJsSDFmQPbuIsESQnJxP+
        7xuUlZVh9D2F++8oXH3hggeue+qAcsyKgmELJEMWXCARE0E2ESUmJm4LtFotht5STO6uUswoNKwxWaEY
        saLwAS2xEomVdEIkAxZwudxtgUKhQD8B+19T6HtFoXPRibLJLSLYgnLUCjmRtNU0YjT9ECZ5/hgU7IOW
        G7wtKCoqQu9LCjdWKHQvO9E868ClaTuZ3QY1kbQbm7Gkjod9pB7uVRO2+hSYyw/DwxMsGbMH5GvQtexC
        J5m/bf43Gp45YHziIF3YoBqzYfB0CGwERksqoAkEDEEw1x7HeKLfR0aQm5uL1jknGsmLG6Yd5Msc0D+y
        o2TCDqXJxrTtXhygW/aen/o9pM5yMwKyIMyyiMVifIuPR2ZmJoRCISoqKsDn8zF8KhDWa2KAQI5iH/wg
        +STxw3iS32dGkJeXB71ej9LSUuh0OhQXF4NsI+RyOb2BaD/Hw0xOKL5qgvBd54+1HF9MpPrDlORXwggE
        AgHi4uIQGxuLmJgYREdHIyoqCpGRkYiIiEB4eDhU3AO4xQvABI+F27xdKIzZzfzCH2vgmfywCmC6AAAA
        AElFTkSuQmCC
</value>
  </data>
</root>