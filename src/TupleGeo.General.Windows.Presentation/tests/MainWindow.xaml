<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib"
        xmlns:local="clr-namespace:TupleGeo.General.Windows.Presentation.Tests"
        xmlns:rc="clr-namespace:TupleGeo.General.Windows.Presentation.Tests.ResourceDescription"
        xmlns:conv="clr-namespace:TupleGeo.General.Windows.Data;assembly=TupleGeo.General.Windows.Presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Filtering="clr-namespace:TupleGeo.General.Windows.Presentation.Tests.Filtering"
        mc:Ignorable="d"
        x:Class="TupleGeo.General.Windows.Presentation.Tests.MainWindow"
        Title="MainWindow"
        Height="550"
        Width="800">

  <Window.Resources>
    <ObjectDataProvider x:Key="coffeeData"
                        MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
      <ObjectDataProvider.MethodParameters>
        <x:Type TypeName="rc:CoffeeType" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <!--<rc:CoffeeResources x:Key="resource" />-->
    <conv:EnumToResourceDescriptionConverter x:Key="enumItemsConverter" />
    <CollectionViewSource x:Key="personViewSource"
                          d:DesignSource="{d:DesignInstance {x:Type Filtering:Person}, CreateList=True}" />
  </Window.Resources>

  <Grid>
    <TabControl x:Name="MainTabControl"
                HorizontalAlignment="Stretch"
                Margin="8"
                VerticalAlignment="Stretch">

      <TabItem x:Name="EnumConverterTabItem"
               Header="EnumToResourceDescriptionConverter">

        <Grid Background="#FF90AACD">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50*" />
            <ColumnDefinition Width="50*" />
          </Grid.ColumnDefinitions>

          <Grid x:Name="Test1Grid"
                Grid.Column="0">
            <Grid.RowDefinitions>
              <RowDefinition Height="28" />
              <RowDefinition Height="36" />
              <RowDefinition Height="40" />
              <RowDefinition Height="40" />
              <RowDefinition />
            </Grid.RowDefinitions>

            <Label Content="Test 1 (Static Resource)"
                   Grid.Row="0"
                   Margin="8,0,8,0"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Top" />

            <!--ItemsSource="{Binding Source={StaticResource foodData}}"-->
            <!--SelectedItem="{Binding Path=TestableClass.FoodType, Mode=TwoWay}"-->

            <ComboBox x:Name="Test1EnumStaticComboBox"
                      Grid.Row="1"
                      Height="Auto"
                      HorizontalAlignment="Stretch"
                      ItemsSource="{Binding Source={StaticResource coffeeData}}"
                      Margin="8,0,8,0"
                      SelectedItem="{Binding Test1Model.CoffeeType, Mode=TwoWay}"
                      VerticalAlignment="Top">

              <!--, ConverterParameter={StaticResource resource}, ConverterCulture={x:Static glob:CultureInfo.CurrentUICulture}-->

              <ComboBox.ItemTemplate>
                <DataTemplate>
                  <Label Content="{Binding ., Converter={StaticResource enumItemsConverter}, Mode=OneWay}"
                         Height="Auto"
                         Margin="0"
                         VerticalAlignment="Center" />
                </DataTemplate>
              </ComboBox.ItemTemplate>

            </ComboBox>

            <Button x:Name="Test1GetCurrentValueButton"
                    Content="Test1 - Get Current Value"
                    Padding="8,0,8,0"
                    Grid.Row="2"
                    HorizontalAlignment="Right"
                    Margin="8,4,8,4"
                    Width="Auto"
                    Click="Test1GetCurrentValueButton_Click" />

          </Grid>

          <Grid x:Name="Test2Grid"
                Grid.Column="1">
            <Grid.RowDefinitions>
              <RowDefinition Height="28" />
              <RowDefinition Height="36" />
              <RowDefinition Height="40" />
              <RowDefinition Height="40" />
              <RowDefinition />
            </Grid.RowDefinitions>

            <Label Content="Test 2 (ViewModel)"
                   Grid.Row="0"
                   Margin="8,0,8,0"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Top" />

            <!--ItemsSource="{Binding Source={StaticResource foodData}}"-->
            <!--SelectedItem="{Binding Path=TestableClass.FoodType, Mode=TwoWay}"-->

            <ComboBox x:Name="Test2EnumViewModelComboBox"
                      Grid.Row="1"
                      Height="Auto"
                      HorizontalAlignment="Stretch"
                      ItemsSource="{Binding Test2Model.CoffeeTypeList, Mode=OneWay}"
                      Margin="8,0,8,0"
                      SelectedItem="{Binding Test2Model.CurrentCoffeeType, Mode=TwoWay}"
                      VerticalAlignment="Top">

              <!--, Converter={StaticResource enumItemsConverter}, ConverterParameter={StaticResource resource}, ConverterCulture={x:Static glob:CultureInfo.CurrentUICulture}-->

              <ComboBox.ItemTemplate>
                <DataTemplate>
                  <Label Content="{Binding ., Mode=OneWay}"
                         Height="Auto"
                         Margin="0"
                         VerticalAlignment="Center" />
                </DataTemplate>
              </ComboBox.ItemTemplate>

            </ComboBox>

            <Button x:Name="Test2GetCurrentValueButton"
                    Content="Test2 - Get Current Value"
                    Padding="8,0,8,0"
                    Grid.Row="2"
                    HorizontalAlignment="Right"
                    Margin="8,4,8,4"
                    Width="Auto"
                    Click="Test2GetCurrentValueButton_Click" />

          </Grid>
        </Grid>

      </TabItem>

      <TabItem x:Name="CollectionViewSourceFiltersTabItem"
               Header="CollectionViewSource Filters">

        <Grid Background="#FF90AACD"
              DataContext="{StaticResource personViewSource}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50*" />
            <ColumnDefinition Width="50*" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="50" />
            <RowDefinition Height="50" />
            <RowDefinition Height="50" />
            <RowDefinition Height="50" />
            <RowDefinition Height="50" />
          </Grid.RowDefinitions>
          
          <Button x:Name="FilterListButton"
                  Content="Filter List"
                  Grid.Column="1"
                  HorizontalAlignment="Right"
                  Margin="10,10,92,10"
                  VerticalAlignment="Top"
                  Width="75"
                  Click="FilterListButton_Click" />

          <Button x:Name="ShowListButton"
                  Content="Show List"
                  Grid.Column="1"
                  HorizontalAlignment="Right"
                  Margin="10"
                  VerticalAlignment="Top"
                  Width="75"
                  Click="ShowListButton_Click" />

          <ListView x:Name="DataListView"
                    SelectionMode="Single"
                    Grid.RowSpan="5"
                    Margin="10"
                    ItemsSource="{Binding}">
            <ListView.View>
              <GridView>
                <GridViewColumn x:Name="idColumn"
                                Width="80"
                                Header="Id">
                  <GridViewColumn.CellTemplate>
                    <DataTemplate>
                      <TextBox Margin="6,-1,-6,-1"
                               Text="{Binding Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
                    </DataTemplate>
                  </GridViewColumn.CellTemplate>
                </GridViewColumn>
                
                <GridViewColumn x:Name="ageColumn"
                                Width="80"
                                Header="Age">
                  <GridViewColumn.CellTemplate>
                    <DataTemplate>
                      <TextBox Margin="6,-1"
                               Text="{Binding Age, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
                    </DataTemplate>
                  </GridViewColumn.CellTemplate>
                </GridViewColumn>
                
                <GridViewColumn x:Name="nameColumn"
                                Width="80"
                                Header="Name">
                  <GridViewColumn.CellTemplate>
                    <DataTemplate>
                      <TextBox Margin="-6,-1"
                               Text="{Binding Name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
                    </DataTemplate>
                  </GridViewColumn.CellTemplate>
                </GridViewColumn>
              </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
              <Style>
                <Setter Property="Control.HorizontalContentAlignment"
                        Value="Stretch" />
                <Setter Property="Control.VerticalContentAlignment"
                        Value="Stretch" />
              </Style>
            </ListView.ItemContainerStyle>
          </ListView>

        </Grid>

      </TabItem>

    </TabControl>

  </Grid>

</Window>
